// Generated by Copilot
import UnifiedGoogleJobsScraper from './src/lib/scrapers/unified-google-jobs-scraper.js'

async function testGoogleJobsScrapers() {
  console.log('üöÄ Testing Google Jobs Scrapers...\n')

  const scraper = new UnifiedGoogleJobsScraper()

  try {
    // Test health check first
    console.log('1. Testing scraper health...')
    const health = await scraper.getScrapingHealth()
    console.log('Health check results:', health)
    console.log('')

    // Test with Puppeteer only
    console.log('2. Testing Puppeteer-only approach...')
    const puppeteerJobs = await scraper.scrapeJobs({
      query: 'remote frontend developer',
      location: 'United States',
      maxPages: 1,
      usePuppeteer: true,
      useStructured: false,
      maxResults: 5
    })
    console.log(`Puppeteer approach found ${puppeteerJobs.length} jobs`)
    if (puppeteerJobs.length > 0) {
      console.log('Sample Puppeteer job:', puppeteerJobs[0])
    }
    console.log('')

    // Test with structured approach only
    console.log('3. Testing structured approach only...')
    const structuredJobs = await scraper.scrapeJobs({
      query: 'remote frontend developer',
      location: 'United States',
      maxPages: 1,
      usePuppeteer: false,
      useStructured: true,
      maxResults: 5
    })
    console.log(`Structured approach found ${structuredJobs.length} jobs`)
    if (structuredJobs.length > 0) {
      console.log('Sample structured job:', structuredJobs[0])
    }
    console.log('')

    // Test unified approach (both methods)
    console.log('4. Testing unified approach (both methods)...')
    const unifiedJobs = await scraper.scrapeJobs({
      query: 'remote software engineer',
      location: 'United States',
      maxPages: 1,
      usePuppeteer: true,
      useStructured: true,
      maxResults: 10
    })
    console.log(`Unified approach found ${unifiedJobs.length} jobs`)
    console.log('')

    // Display results summary
    console.log('üìä SUMMARY:')
    console.log(`- Puppeteer only: ${puppeteerJobs.length} jobs`)
    console.log(`- Structured only: ${structuredJobs.length} jobs`)
    console.log(`- Unified approach: ${unifiedJobs.length} jobs`)
    console.log('')

    // Show sample jobs from unified approach
    if (unifiedJobs.length > 0) {
      console.log('üéØ Sample Jobs from Unified Approach:')
      unifiedJobs.slice(0, 3).forEach((job, index) => {
        console.log(`\n${index + 1}. ${job.title}`)
        console.log(`   Company: ${job.company}`)
        console.log(`   Location: ${job.location}`)
        console.log(`   Type: ${job.employmentType} | Remote: ${job.remoteType}`)
        if (job.salaryText) console.log(`   Salary: ${job.salaryText}`)
        if (job.skills && job.skills.length > 0) console.log(`   Skills: ${job.skills.join(', ')}`)
        if (job.applyUrl) console.log(`   Apply: ${job.applyUrl}`)
        console.log(`   Description: ${job.description.substring(0, 200)}...`)
      })
    }

  } catch (error) {
    console.error('‚ùå Test failed:', error)
  } finally {
    await scraper.close()
    console.log('\n‚úÖ Tests completed and resources cleaned up.')
  }
}

// Run the test
testGoogleJobsScrapers().catch(console.error)
