// Generated by Copilot
'use client'

import { useState } from 'react'
import { useUser, useJobSearch } from '@/lib/supabase/hooks'
import { UserMenu } from '@/components/auth/user-menu'
import { JobList } from '@/components/jobs/job-list'
import { JobSearch } from '@/components/jobs/job-search'
import { Button } from '@/components/ui/button'
import Link from 'next/link'

interface SearchFilters {
  title: string
  location: string
  employmentType: string
  skills: string
  salaryMin: string
  salaryMax: string
}

export default function Home() {
  const { user, loading } = useUser()
  const { jobs, loading: searchLoading, error, totalCount, pagination, searchJobs } = useJobSearch()
  const [isSearchMode, setIsSearchMode] = useState(false)
  const [currentSearchParams, setCurrentSearchParams] = useState<any>({})

  // Handle search functionality
  const handleSearch = (filters: SearchFilters) => {
    const searchParams = {
      title: filters.title || undefined,
      location: filters.location || undefined,
      employmentType: filters.employmentType || undefined,
      salaryMin: filters.salaryMin ? parseInt(filters.salaryMin) : undefined,
      salaryMax: filters.salaryMax ? parseInt(filters.salaryMax) : undefined,
      page: 1
    }
    
    setCurrentSearchParams(searchParams)
    setIsSearchMode(true)
    searchJobs(searchParams)
  }

  // Handle search clear
  const handleClearSearch = () => {
    setIsSearchMode(false)
    setCurrentSearchParams({})
  }

  // Handle pagination for search results
  const handlePageChange = (page: number) => {
    const newSearchParams = { ...currentSearchParams, page }
    setCurrentSearchParams(newSearchParams)
    searchJobs(newSearchParams)
  }

  return (
    <div className="min-h-screen bg-background p-8">
      <div className="max-w-6xl mx-auto space-y-8">
        <div className="flex items-center justify-between">
          <div className="space-y-4">
            <h1 className="text-4xl font-bold text-foreground">Remote Job Board MVP</h1>
            <p className="text-lg text-muted-foreground">
              Find your next remote opportunity with advanced search
            </p>
          </div>
          <div className="flex items-center gap-4">
            {loading ? (
              <div className="h-8 w-24 bg-muted animate-pulse rounded"></div>
            ) : user ? (
              <UserMenu />
            ) : (
              <Link href="/auth">
                <Button>Sign In</Button>
              </Link>
            )}
          </div>
        </div>

        {/* Search Section */}
        <JobSearch 
          onSearch={handleSearch}
          onClear={handleClearSearch}
          loading={searchLoading}
          totalResults={isSearchMode ? totalCount : undefined}
        />

        {/* Jobs Section */}
        <div className="space-y-6">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold">
              {isSearchMode ? 'Search Results' : 'Latest Jobs'}
            </h2>
            {user && (
              <Button variant="outline">Post a Job</Button>
            )}
          </div>
          
          <JobList 
            searchMode={isSearchMode}
            searchData={isSearchMode ? {
              jobs,
              loading: searchLoading,
              error,
              totalCount,
              pagination,
              onPageChange: handlePageChange
            } : undefined}
          />
        </div>
      </div>
    </div>
  )
}
