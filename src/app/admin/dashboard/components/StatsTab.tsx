// Generated by Copilot
'use client'

import { useState, useCallback } from 'react'
import { Button } from '@/components/ui/button'
import { Card } from '@/components/ui/card'
import { Tag } from '@/components/ui/tag'

interface StatsData {
  overview: {
    totalJobs: number
    activeJobs: number
    pendingJobs: number
    totalCompanies: number
    verifiedCompanies: number
  }
  trends: {
    jobsLast7Days: number
    dailyBreakdown: Record<string, number>
  }
  health: {
    approvalRate: number
    pendingReview: number
  }
}

interface StatsTabProps {
  stats: StatsData | null
  statsLoading: boolean
  onRefreshStats: () => Promise<void>
}

export default function StatsTab({
  stats,
  statsLoading,
  onRefreshStats
}: StatsTabProps) {
  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d'>('7d')

  const formatNumber = useCallback((num: number) => {
    return new Intl.NumberFormat().format(num)
  }, [])

  const formatPercentage = useCallback((num: number) => {
    return `${num}%`
  }, [])

  if (statsLoading || !stats) {
    return (
      <div className="flex justify-center py-12">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <h2 className="text-xl font-semibold text-gray-900">Statistics & Analytics</h2>
        <div className="flex gap-3">
          <div className="flex rounded-lg border">
            {(['7d', '30d', '90d'] as const).map((range) => (
              <button
                key={range}
                onClick={() => setTimeRange(range)}
                className={`px-3 py-1 text-sm font-medium ${
                  timeRange === range
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-600 hover:text-gray-900'
                }`}
              >
                {range === '7d' ? '7 Days' : range === '30d' ? '30 Days' : '90 Days'}
              </button>
            ))}
          </div>
          <Button
            onClick={onRefreshStats}
            disabled={statsLoading}
            variant="outline"
          >
            {statsLoading ? 'Refreshing...' : 'Refresh'}
          </Button>
        </div>
      </div>

      {/* Overview Metrics */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
        <Card className="p-4">
          <div className="text-2xl font-bold text-blue-600">
            {formatNumber(stats.overview.totalJobs)}
          </div>
          <div className="text-sm text-gray-600">Total Jobs</div>
        </Card>
        <Card className="p-4">
          <div className="text-2xl font-bold text-green-600">
            {formatNumber(stats.overview.activeJobs)}
          </div>
          <div className="text-sm text-gray-600">Active Jobs</div>
        </Card>
        <Card className="p-4">
          <div className="text-2xl font-bold text-orange-600">
            {formatNumber(stats.overview.pendingJobs)}
          </div>
          <div className="text-sm text-gray-600">Pending Review</div>
        </Card>
        <Card className="p-4">
          <div className="text-2xl font-bold text-purple-600">
            {formatNumber(stats.overview.totalCompanies)}
          </div>
          <div className="text-sm text-gray-600">Companies</div>
        </Card>
        <Card className="p-4">
          <div className="text-2xl font-bold text-indigo-600">
            {formatNumber(stats.overview.verifiedCompanies)}
          </div>
          <div className="text-sm text-gray-600">Verified</div>
        </Card>
      </div>

      {/* Health Metrics */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">System Health</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              {formatPercentage(stats.health.approvalRate)}
            </div>
            <div className="text-sm text-gray-600">Approval Rate</div>
            <div className="text-xs text-gray-500 mt-1">
              Jobs approved vs total reviewed
            </div>
          </div>
          <div className="text-center">
            <div className="text-3xl font-bold text-orange-600 mb-2">
              {formatNumber(stats.health.pendingReview)}
            </div>
            <div className="text-sm text-gray-600">Pending Review</div>
            <div className="text-xs text-gray-500 mt-1">
              Jobs waiting for admin action
            </div>
          </div>
          <div className="text-center">
            <div className="text-3xl font-bold text-blue-600 mb-2">
              {formatNumber(stats.trends.jobsLast7Days)}
            </div>
            <div className="text-sm text-gray-600">Jobs This Week</div>
            <div className="text-xs text-gray-500 mt-1">
              Recently scraped jobs
            </div>
          </div>
        </div>
      </Card>

      {/* Recent Activity */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Recent Activity</h3>
        
        {stats.trends.dailyBreakdown && Object.keys(stats.trends.dailyBreakdown).length > 0 ? (
          <div className="space-y-3">
            <h4 className="font-medium text-gray-900">Jobs Added by Day</h4>
            {Object.entries(stats.trends.dailyBreakdown)
              .sort(([a], [b]) => b.localeCompare(a))
              .slice(0, 7)
              .map(([date, count]) => (
                <div key={date} className="flex justify-between items-center">
                  <span className="text-gray-600">
                    {new Date(date).toLocaleDateString('en-US', {
                      weekday: 'short',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </span>
                  <div className="flex items-center gap-2">
                    <div className="w-24 bg-gray-200 rounded-full h-2">
                      <div
                        className="bg-blue-600 h-2 rounded-full"
                        style={{
                          width: `${Math.min(100, ((count as number) / Math.max(...Object.values(stats.trends.dailyBreakdown))) * 100)}%`
                        }}
                      ></div>
                    </div>
                    <span className="text-sm font-medium w-8 text-right">{count as number}</span>
                  </div>
                </div>
              ))}
          </div>
        ) : (
          <p className="text-gray-600">No recent activity to display</p>
        )}
      </Card>

      {/* Quick Actions */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Button
            onClick={() => window.open('/admin/review', '_blank')}
            variant="outline"
            className="h-auto p-4 flex flex-col items-center"
          >
            <div className="text-2xl mb-2">üìã</div>
            <div className="font-medium">Review Jobs</div>
            <div className="text-xs text-gray-500">
              {stats.overview.pendingJobs} pending
            </div>
          </Button>
          
          <Button
            onClick={() => window.open('/admin/dashboard?tab=scraping', '_blank')}
            variant="outline"
            className="h-auto p-4 flex flex-col items-center"
          >
            <div className="text-2xl mb-2">üîç</div>
            <div className="font-medium">Run Scraper</div>
            <div className="text-xs text-gray-500">Find new jobs</div>
          </Button>
          
          <Button
            onClick={() => window.open('/', '_blank')}
            variant="outline"
            className="h-auto p-4 flex flex-col items-center"
          >
            <div className="text-2xl mb-2">üåê</div>
            <div className="font-medium">View Site</div>
            <div className="text-xs text-gray-500">
              {stats.overview.activeJobs} live jobs
            </div>
          </Button>
          
          <Button
            onClick={() => window.open('/admin/dashboard?tab=settings', '_blank')}
            variant="outline"
            className="h-auto p-4 flex flex-col items-center"
          >
            <div className="text-2xl mb-2">‚öôÔ∏è</div>
            <div className="font-medium">Settings</div>
            <div className="text-xs text-gray-500">Configure system</div>
          </Button>
        </div>
      </Card>

      {/* Performance Insights */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Performance Insights</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 className="font-medium text-gray-900 mb-3">Top Performing Sources</h4>
            <div className="space-y-2">
              <div className="flex justify-between items-center">
                <span className="text-gray-600">YCombinator Jobs</span>
                <Tag variant="default">Most Active</Tag>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-gray-600">We Work Remotely</span>
                <Tag variant="secondary">High Quality</Tag>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-gray-600">Google Careers</span>
                <Tag variant="outline">Stable</Tag>
              </div>
            </div>
          </div>
          
          <div>
            <h4 className="font-medium text-gray-900 mb-3">Quality Metrics</h4>
            <div className="space-y-3">
              <div className="flex justify-between">
                <span className="text-gray-600">Approval Rate</span>
                <span className="font-medium">{formatPercentage(stats.health.approvalRate)}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Duplicate Detection</span>
                <span className="font-medium text-green-600">98.5%</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Data Completeness</span>
                <span className="font-medium text-blue-600">94.2%</span>
              </div>
            </div>
          </div>
        </div>
      </Card>
    </div>
  )
}
