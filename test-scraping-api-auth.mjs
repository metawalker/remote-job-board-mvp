// Generated by Copilot
import axios from 'axios';

async function testScrapingAPIWithAuth() {
  try {
    console.log('Testing the scraping API with proper authentication...');
    
    // Use the CRON_SECRET from .env.local
    const cronSecret = 'your-secure-secret-key-here-change-this-in-production';
    
    const response = await axios.post('http://localhost:3000/api/scrape', {}, {
      timeout: 120000, // 2 minutes timeout for scraping
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${cronSecret}`
      }
    });
    
    console.log('Scraping API Response:');
    console.log('Status:', response.status);
    console.log('Summary:', response.data.summary);
    console.log('Message:', response.data.message);
    
    // Check RSS scraping results
    const rssResults = response.data.results?.filter(r => r.source.includes('RSS'));
    if (rssResults && rssResults.length > 0) {
      console.log('\n=== RSS Scraping Results ===');
      rssResults.forEach(result => {
        console.log(`${result.source}: ${result.jobsFound} found, ${result.jobsInserted} inserted`);
        if (result.errors.length > 0) {
          console.log(`  Errors: ${result.errors.join(', ')}`);
        }
      });
    }
    
    // Show all results
    console.log('\n=== All Scraping Results ===');
    response.data.results?.forEach(result => {
      console.log(`${result.source}: ${result.jobsFound} found, ${result.jobsInserted} inserted`);
      if (result.errors.length > 0) {
        console.log(`  Errors: ${result.errors.join(', ')}`);
      }
    });
    
  } catch (error) {
    console.error('Error testing scraping API:');
    if (error.response) {
      console.log('Status:', error.response.status);
      console.log('Data:', JSON.stringify(error.response.data, null, 2));
    } else {
      console.log(error.message);
    }
  }
}

testScrapingAPIWithAuth();
